// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lab2_ORM_part2.Models;

#nullable disable

namespace lab2_ORM_part2.Migrations
{
    [DbContext(typeof(schoolContext))]
    partial class schoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("lab2_ORM_part2.Models.Course", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CourseName = "Math 101",
                            StudentId = 1L,
                            TeacherId = 2L
                        });
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomerPass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Otchestvo")
                        .HasColumnType("text");

                    b.Property<string>("SeriyaPass")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Person");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Student", b =>
                {
                    b.HasBaseType("lab2_ORM_part2.Models.Person");

                    b.Property<string>("PhoneMum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("StudentId")
                        .HasColumnType("bigint");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            LastName = "Johnson",
                            Name = "Alice",
                            NomerPass = "789012",
                            SeriyaPass = "3456",
                            PhoneMum = "123123",
                            StudentId = 0L
                        });
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Teacher", b =>
                {
                    b.HasBaseType("lab2_ORM_part2.Models.Person");

                    b.Property<long>("TeacherId")
                        .HasColumnType("bigint");

                    b.ToTable("Teacher", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 2L,
                            LastName = "Williams",
                            Name = "Bob",
                            NomerPass = "890123",
                            SeriyaPass = "4567",
                            TeacherId = 0L
                        });
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Course", b =>
                {
                    b.HasOne("lab2_ORM_part2.Models.Student", "Student")
                        .WithMany("Courses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lab2_ORM_part2.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Student", b =>
                {
                    b.HasOne("lab2_ORM_part2.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("lab2_ORM_part2.Models.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Teacher", b =>
                {
                    b.HasOne("lab2_ORM_part2.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("lab2_ORM_part2.Models.Teacher", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Student", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("lab2_ORM_part2.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
